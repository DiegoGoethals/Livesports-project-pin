@inject IGameService GameService
@inject IUserService UserService
@inject NavigationManager Navigation

<div class="container">
    <h3>Games</h3>
    @if (games != null && games.Any())
    {
        @foreach (var game in games)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <GameCard game="game" userType="@userType" hubConnection="hubConnection" />
            </div>
        }
    }
    else
    {
        <p>No games available.</p>
    }

    @if (userType == "Reporter")
    {
        <button @onclick="ShowPopUp" class="btn btn-primary">Create Game</button>
    }

    <AddGameModal @ref="popUp" hubConnection="hubConnection" />
</div>

@code {
    ICollection<Game> games;
    private string userType;

    private AddGameModal popUp;

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        userType = UserService.UserType;
        games = GameService.GetAll();

        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/gameshub"))
            .Build();

        hubConnection.On<Game>("UpdateGamesList", (game) =>
        {
            InvokeAsync(StateHasChanged);
        });
        await hubConnection.StartAsync();
    }

    private async Task ShowPopUp()
    {
        await popUp.Show();
    }
}